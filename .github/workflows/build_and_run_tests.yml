name: Build project and run tests

on:
  workflow_dispatch:
    inputs:
      category:
        description: 'Test category'
        required: true
        default: 'Both'
        type: choice
        options:
        - API
        - UI
        - Both 
      browser:
        description: 'Browser for UI tests'
        required: false
        default: 'Chrome'
        type: choice
        options:
        - Chrome
        - Edge
  push:
    branches: [ "master", "M9_CI-CD" ]

  schedule:
    - cron: '0 0 * * *' 

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    #env:
      ##appsettings.json
      #WebBrowserConfig__BrowserName: ${{ inputs.browser }}
      #UserConfig__User: ${{secrets.USER_LOGIN}}
      #UserConfig__Password: ${{secrets.USER_PASSWORD}}
      #ApiConfig__ProjectName: ${{secrets.USER_PROJECT}}
      #ApiConfig__BearerToken: ${{secrets.API_KEY}}
      ##ReportPortal.config.json
      #server__project: ${{secrets.REPORTING_PROJECT}}
      #server__authentication__uuid: ${{secrets.REPORTING_AUTH}}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Install Google Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

    - name: Restore dependencies
      run: dotnet restore src/RP.Testing.sln

    - name: Build
      run: dotnet build src/RP.Testing.sln --no-restore

    - name: Set TestFilter
      run: |
        if [ "${{ github.event.inputs.category || '' }}" ] || [ "${{ github.event.inputs.category }}" == "Both" ]; then
          echo "TEST_FILTER=TestCategory=UI&TestCategory=API" >> $GITHUB_ENV
        else
          echo "TEST_FILTER=TestCategory=${{ github.event.inputs.category }}" >> $GITHUB_ENV
        fi

    - name: Replace tokens in config files
      uses: cschleiden/replace-tokens@v1
      with:
        tokenPrefix: '{'
        tokenSuffix: '}'
        files: '["appsettings.json", "ReportPortal.config.json"]'
      env:
        BROWSER_NAME: ${{ github.event.inputs.browser || 'Chrome'}}
        USER_LOGIN: ${{ secrets.USER_LOGIN }}
        USER_PASSWORD: ${{ secrets.USER_PASSWORD }}
        USER_PROJECT: ${{ secrets.USER_PROJECT }}
        API_KEY: ${{ secrets.API_KEY }}
        REPORTING_PROJECT: ${{ secrets.REPORTING_PROJECT }}
        REPORTING_AUTH: ${{ secrets.REPORTING_AUTH }}

    - name: Run tests
      run: dotnet test src/RP.Tests/RP.Tests.csproj --no-build --filter ${TEST_FILTER} --logger "trx;logfilename=testResults.trx" --results-directory "TestResults"

    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: TestResults/testResults.trx
      if: ${{ always() }}
